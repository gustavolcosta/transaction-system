basePath: /
definitions:
  dtos.CreateAccountInputDTO:
    properties:
      document_number:
        example: "1234567890"
        type: string
    required:
    - document_number
    type: object
  dtos.CreateAccountOutputDTO:
    properties:
      account_id:
        example: 1
        type: integer
      document_number:
        example: "1234567890"
        type: string
    type: object
  dtos.CreateTransactionInputDTO:
    properties:
      account_id:
        example: 1
        type: integer
      amount:
        example: 123.4
        type: number
      operation_type_id:
        example: 4
        type: integer
    required:
    - account_id
    - amount
    - operation_type_id
    type: object
  dtos.CreateTransactionOutputDTO:
    properties:
      account_id:
        example: 1
        type: integer
      amount:
        example: 123.4
        type: number
      id:
        example: 1
        type: integer
      operation_type_id:
        example: 4
        type: integer
    type: object
  dtos.GetAccountByIdOutputDTO:
    properties:
      account_id:
        example: 1
        type: integer
      document_number:
        example: "1234567890"
        type: string
    type: object
  response.ExceptionResponse:
    properties:
      message:
        type: string
    type: object
info:
  contact: {}
  description: App to handle with transactions routine
  title: Transaction System API
  version: "1.0"
paths:
  /accounts:
    post:
      consumes:
      - application/json
      description: create an account
      parameters:
      - description: Account info
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateAccountInputDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.CreateAccountOutputDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ExceptionResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ExceptionResponse'
      summary: Create an Account
      tags:
      - account
  /accounts/{id}:
    get:
      consumes:
      - application/json
      description: get account by id
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.GetAccountByIdOutputDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ExceptionResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ExceptionResponse'
      summary: Get Account by Id
      tags:
      - account
  /transactions:
    post:
      consumes:
      - application/json
      description: create an Transaction
      parameters:
      - description: Transactions info
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateTransactionInputDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.CreateTransactionOutputDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ExceptionResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ExceptionResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ExceptionResponse'
      summary: Create an Transaction
      tags:
      - transaction
swagger: "2.0"
